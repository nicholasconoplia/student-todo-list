* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

body {
  background-color: var(--background-color);
  color: var(--text-color);
  min-height: 100vh;
  padding: 1.5rem;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transition: background-color 0.3s ease, color 0.3s ease;
}

.app-container {
  display: flex;
  flex-direction: column;
  max-width: 800px;
  margin: 0 auto;
  gap: 1.5rem;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: var(--card-background);
  border-radius: 12px;
  padding: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: background-color 0.3s ease;
}

header h1 {
  font-size: 1.875rem;
  font-weight: 700;
  color: var(--text-color);
}

.header-controls {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

.todo-container {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.todo-list {
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.todo-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
}

.todo-header-left {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.todo-header h2 {
  font-size: 1.25rem;
  font-weight: 600;
}

.todo-count {
  background-color: var(--primary-color);
  color: white;
  font-size: 0.75rem;
  padding: 0.125rem 0.5rem;
  border-radius: 9999px;
}

.todo-item {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.75rem;
}

.drag-handle {
  color: #bbb;
  margin-right: 8px;
  cursor: grab;
  user-select: none;
  padding: 0 5px;
}

.drag-handle:active {
  cursor: grabbing;
}

.todo-item.dragging {
  opacity: 0.5;
  transform: scale(0.98);
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.todo-header.drag-over {
  background-color: var(--primary-color);
  opacity: 0.8;
}

.todo-checkbox {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: 4px solid #e6e6e6;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  cursor: pointer;
  position: relative;
  transition: background-color 0.2s ease;
}

.todo-checkbox:checked {
  background-color: var(--primary-color);
}

.todo-checkbox:checked::after {
  content: '';
  position: absolute;
  top: 2px;
  left: 7px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.todo-title {
  flex: 1;
  transition: text-decoration 0.2s ease;
}

.todo-title:focus {
  background-color: var(--surface-a0);
  outline: 2px solid var(--primary-color);
  outline-offset: -2px;
  color: var(--text-color);
}

.todo-title:empty:before {
  content: 'Type something...';
  color: var(--text-secondary);
  opacity: 0.7;
}

.todo-title.completed {
  text-decoration: line-through;
  color: var(--text-secondary);
}

.delete-button {
  background: none;
  border: none;
  color: var(--error-color);
  cursor: pointer;
  font-size: 14px;
  opacity: 0.5;
}

.delete-button:hover {
  opacity: 1;
}

.add-todo-container {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
  gap: 10px;
}

#newTodoInput {
  flex: 1;
  padding: 8px 10px;
  border: 1px solid var(--border-color);
  border-radius: 5px;
  font-size: 14px;
  background-color: var(--surface-a0);
  color: var(--text-color);
}

button {
  padding: 8px 12px;
  background-color: var(--primary-color);
  color: var(--background-color);
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 0.85em;
  transition: background-color 0.3s;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

button:hover {
  opacity: 0.9;
}

#pinButton, #canvasButton {
  background-color: var(--primary-color);
}

#pinButton:hover, #canvasButton:hover {
  opacity: 0.9;
}

.canvas-container {
  margin-top: 10px;
}

/* Modal styles */
.modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: var(--modal-background);
  backdrop-filter: blur(4px);
}

/* Ensure these specific modals have proper backgrounds */
#tutorialModal, #canvasModal, #apiInstructionsModal {
  background-color: var(--modal-background);
  backdrop-filter: blur(4px);
}

.modal-content {
  background-color: var(--card-background);
  color: var(--text-primary);
  margin: 5% auto;
  padding: 25px;
  width: 90%;
  max-width: 800px;
  border-radius: 12px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
  max-height: 90vh;
  overflow-y: auto;
  animation: modalFadeIn 0.3s;
}

/* Ensure both tutorial and canvas modals have solid backgrounds */
#tutorialModal .modal-content, 
#canvasModal .modal-content,
#apiInstructionsModal .modal-content {
  background-color: #ffffff;
}

.dark-theme #tutorialModal .modal-content,
.dark-theme #canvasModal .modal-content,
.dark-theme #apiInstructionsModal .modal-content {
  background-color: #1f2937;
}

.close {
  color: var(--text-secondary);
  float: right;
  font-size: 28px;
  font-weight: bold;
  cursor: pointer;
}

.close:hover {
  color: var(--text-color);
}

.canvas-auth {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 10px;
  margin: 15px 0;
}

#universitySelect,
#canvasApiUrl,
#canvasApiKey {
  flex: 1;
  min-width: 200px;
  background-color: var(--surface-a0);
  color: var(--text-color);
  padding: 8px 12px;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-size: 14px;
}

#canvasApiUrl[readonly] {
  background-color: var(--surface-a10);
  cursor: not-allowed;
  opacity: 0.8;
}

#fetchAssignmentsBtn {
  align-self: flex-end;
  min-width: 120px;
}

.assignments-list {
  max-height: 60vh;
  overflow-y: auto;
  margin-top: 15px;
  padding-right: 10px;
}

.assignment-item {
  background-color: var(--card-background);
  border-radius: 8px;
  padding: 12px 15px;
  margin: 8px 0;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 10px;
  border-left: 2px solid var(--primary-color);
  transition: background-color 0.3s, color 0.3s;
}

.assignment-details {
  flex: 1;
  min-width: 0;
}

.assignment-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
  gap: 8px;
}

.assignment-title-row {
  display: flex;
  align-items: center;
  gap: 8px;
  flex: 1;
  min-width: 0;
  flex-wrap: wrap;
}

.assignment-title {
  font-weight: 600;
  color: var(--text-color);
  font-size: 1em;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.assignment-points {
  color: #27ae60;
  font-weight: 600;
  font-size: 0.9em;
  white-space: nowrap;
  margin-left: 10px;
}

.assignment-due {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 8px;
  font-size: 0.9em;
  margin-top: 4px;
}

.due-absolute {
  color: #e74c3c;
}

.due-relative {
  background: var(--text-secondary);
  color: var(--background-color);
  padding: 2px 8px;
  border-radius: 12px;
  font-size: 0.85em;
  white-space: nowrap;
}

.assignment-links {
  margin-top: 4px;
}

.canvas-link {
  background: none;
  border: none;
  color: var(--primary-color);
  cursor: pointer;
  font-size: 0.9em;
  padding: 0;
  text-decoration: underline;
}

.canvas-link:hover {
  opacity: 0.8;
}

.no-assignments {
  text-align: center;
  padding: 20px;
  color: #7f8c8d;
  font-style: italic;
}

.add-assignment-button {
  white-space: nowrap;
  padding: 6px 12px;
  font-size: 0.9em;
  min-width: fit-content;
}

.course-header {
  background-color: var(--primary-color);
  color: var(--background-color);
  padding: 10px 15px;
  margin: 15px 0 10px 0;
  border-radius: 4px;
}

.course-header h3 {
  font-size: 1.1em;
  margin: 0;
}

.course-header .course-name {
  font-size: 0.9em;
  opacity: 0.8;
  margin-top: 4px;
}

.assignment-item {
  margin-left: 15px;
  border-left: 2px solid var(--primary-color);
}

.submission-status {
  color: var(--background-color) !important;
  padding: 2px 8px;
  border-radius: 12px;
  font-size: 0.85em;
  white-space: nowrap;
}

.submission-status.submitted {
  background-color: var(--primary-color);
}

.submission-status.pending {
  background-color: var(--text-secondary);
}

.todo-section {
  background-color: var(--card-background);
  border-radius: 1.5rem;
  padding: 1rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.todo-section.drag-over {
  border-color: #4a90e2;
  background-color: rgba(74, 144, 226, 0.05);
}

.todo-list.drag-over {
  background-color: rgba(74, 144, 226, 0.05);
  border-radius: 5px;
}

.todo-item.drag-over {
  border-top: 2px solid var(--primary-color);
}

/* Prevent dragging while editing */
[contenteditable="true"]:focus {
  cursor: text;
}

.priority-button {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 16px;
  padding: 0 5px;
  opacity: 0.8;
}

.priority-button:hover {
  opacity: 1;
}

.progress-container {
  width: 100px;
  height: 6px;
  background: #eee;
  border-radius: 3px;
  margin-left: 10px;
  position: relative;
  cursor: pointer;
}

.progress-bar {
  height: 100%;
  background: #4CAF50;
  border-radius: 3px;
  transition: width 0.2s;
}

.progress-container span {
  position: absolute;
  right: -30px;
  top: -7px;
  font-size: 12px;
  color: #666;
}

.sort-button {
  background-color: #6c757d;
  margin-right: 10px;
}

.sort-button:hover {
  background-color: #5a6268;
}

.api-help-link {
  display: block;
  margin: 8px 0;
  color: var(--primary-color);
  text-decoration: none;
  font-size: 0.9em;
}

.api-instructions-modal .modal-content {
  max-width: 600px;
  padding: 25px;
}

.instructions-list {
  margin: 20px 0;
  padding-left: 25px;
  line-height: 1.6;
}

.instructions-list li {
  margin-bottom: 10px;
}

.instructions-note {
  margin-top: 20px;
  padding: 15px;
  background-color: var(--card-background);
  border-left: 4px solid var(--primary-color);
  border-radius: 4px;
  color: var(--text-color);
}

.api-instructions-modal h2 {
  color: #2c3e50;
  margin-bottom: 15px;
}

.api-instructions-modal .canvas-link {
  color: #3498db;
  text-decoration: none;
}

.api-instructions-modal .canvas-link:hover {
  text-decoration: underline;
}

/* Add responsive styles */
@media (max-width: 768px) {
  .modal-content {
    margin: 0;
    width: 100%;
    height: 100%;
    max-height: 100vh;
    border-radius: 0;
  }
  
  .assignment-item {
    flex-direction: column;
    align-items: stretch;
  }
  
  .add-assignment-button {
    align-self: flex-start;
  }
  
  .assignment-title-row {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .assignment-points {
    margin-left: 0;
  }
}

/* Add CSS Variables for themes */
:root {
  --primary-color: #a78bfa;
  --text-color: #1f2937;
  --text-secondary: #6b7280;
  --surface-a5: #f3f4f6;
  --surface-a10: #e5e7eb;
  --surface-a20: #d1d5db;
  --card-background: #ffffff;
  --background-color: #ffffff;
  --modal-background: rgba(0, 0, 0, 0.5);
}

.dark-theme {
  --text-color: #f3f4f6;
  --text-secondary: #9ca3af;
  --surface-a5: #2d3748;
  --surface-a10: #374151;
  --surface-a20: #4b5563;
  --card-background: #1f2937;
  --background-color: #111827;
}

/* Update existing styles to use CSS variables */
body {
  background-color: var(--background-color);
  color: var(--text-color);
}

.todo-header {
  background-color: var(--primary-color);
  color: var(--background-color);
}

.todo-item {
  background-color: var(--card-background);
  border-left: 2px solid var(--primary-color);
}

.modal-content {
  background-color: var(--background-color);
  color: var(--text-color);
}

.assignment-item {
  background-color: var(--card-background);
  border-left: 2px solid var(--primary-color);
}

/* Add theme toggle button styles */
.theme-button {
  display: none;
}

/* Update other elements for dark mode */
.dark-theme .todo-title {
  color: var(--text-color);
}

.dark-theme .todo-title.completed {
  color: var(--text-secondary);
}

.dark-theme #newTodoInput {
  background-color: var(--surface-a30);
  color: var(--text-color);
  border-color: var(--border-color);
}

.dark-theme .assignment-title {
  color: var(--text-color);
}

.dark-theme .course-header {
  background-color: var(--primary-color);
}

.dark-theme .canvas-link {
  color: var(--primary-a10);
}

.dark-theme .canvas-link:hover {
  color: var(--primary-a0);
}

/* Update modal styles for dark mode */
.dark-theme .modal {
  background-color: rgba(0, 0, 0, 0.7);
}

.dark-theme .close {
  color: var(--text-secondary);
}

.dark-theme .close:hover {
  color: var(--text-color);
}

.dark-theme #canvasApiKey {
  background-color: var(--surface-a30);
  color: var(--text-color);
  border-color: var(--border-color);
}

/* Update status indicators for dark mode */
.dark-theme .submission-status.submitted {
  background-color: var(--primary-color);
}

.dark-theme .submission-status.pending {
  background-color: var(--text-secondary);
}

/* Add smooth transitions */
body {
  transition: background-color 0.3s, color 0.3s;
}

.todo-item,
.todo-header,
.modal-content,
.assignment-item,
button,
input {
  transition: background-color 0.3s, color 0.3s, border-color 0.3s;
}

/* Update input styling */
#newTodoInput:focus {
  border-color: var(--primary-color);
  outline: none;
  box-shadow: 0 0 0 2px rgba(var(--primary-color), 0.2);
}

/* Update clear button */
.clear-button {
  background-color: var(--error-color);
  color: var(--text-color);
}

.clear-button:hover {
  opacity: 0.9;
}

/* Update text selection colors */
::selection {
  background-color: var(--primary-color);
  color: var(--background-color);
}

/* Fix input text colors */
#newTodoInput {
  background-color: var(--surface-a0);
  color: var(--text-color);
  border: 1px solid var(--border-color);
}

/* Fix dark mode specific issues */
.dark-theme .todo-title:focus {
  background-color: var(--surface-a30);
  color: var(--text-color);
}

.dark-theme #newTodoInput {
  background-color: var(--surface-a30);
  color: var(--text-color);
}

/* Fix button text colors */
button {
  color: var(--background-color);
}

.clear-button {
  color: var(--text-color);
}

/* Fix modal input colors */
#canvasApiKey {
  background-color: var(--surface-a0);
  color: var(--text-color);
}

.dark-theme #canvasApiKey {
  background-color: var(--surface-a30);
  color: var(--text-color);
}

/* Fix placeholder text color */
::placeholder {
  color: var(--text-secondary);
  opacity: 0.7;
}

.dark-theme ::placeholder {
  color: var(--text-secondary);
  opacity: 0.7;
}

/* Fix contenteditable placeholder */
[contenteditable="true"]:empty:before {
  content: 'Type something...';
  color: var(--text-secondary);
  opacity: 0.7;
}

/* Fix drag-over states */
.todo-header.drag-over {
  background-color: var(--primary-color);
  opacity: 0.8;
}

.todo-item.drag-over {
  border-top: 2px solid var(--primary-color);
}

/* Fix submission status text */
.submission-status {
  color: var(--background-color) !important;
}

/* Update theme variables for better contrast */
:root {
  --text-primary: #323232;
  --text-secondary: #595959;
  --card-background: #fff;
}

.dark-theme {
  --text-primary: #fff;
  --text-secondary: #ebebeb;
  --card-background: var(--surface-a10);
}

/* Fix modal close button */
.close {
  color: var(--text-secondary);
}

.close:hover {
  color: var(--text-primary);
}

/* Fix canvas link colors */
.canvas-link {
  color: var(--primary-color);
}

.dark-theme .canvas-link {
  color: var(--primary-a30);
}

/* Fix API help link */
.api-help-link {
  color: var(--primary-color);
}

.dark-theme .api-help-link {
  color: var(--primary-a30);
}

/* Theme switch styles */
.theme-switch-container {
  margin-right: 10px;
  display: flex;
  align-items: center;
}

.checkbox {
  opacity: 0;
  position: absolute;
}

.checkbox-label {
  background-color: #333;
  width: 50px;
  height: 26px;
  border-radius: 50px;
  position: relative;
  padding: 5px;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);
}

.fa-moon {
  color: #f1c40f;
}

.fa-sun {
  color: #f39c12;
}

.checkbox-label .ball {
  background-color: #fff;
  width: 22px;
  height: 22px;
  position: absolute;
  left: 2px;
  top: 2px;
  border-radius: 50%;
  transition: transform 0.2s linear;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.checkbox:checked + .checkbox-label .ball {
  transform: translateX(24px);
}

/* Remove old theme switch styles */
.theme-button,
.theme-switch,
.theme-slider {
  display: none;
}

/* Type toggle styles */
.type-toggle {
  display: flex;
  align-items: center;
  gap: 8px;
}

.toggle-switch {
  position: relative;
  display: inline-block;
  width: 36px;
  height: 20px;
}

.toggle-switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.toggle-slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--surface-a20);
  transition: .4s;
  border-radius: 20px;
}

.toggle-slider:before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 2px;
  bottom: 2px;
  background-color: var(--text-color);
  transition: .4s;
  border-radius: 50%;
}

.toggle-switch input:checked + .toggle-slider {
  background-color: var(--primary-color);
}

.toggle-switch input:checked + .toggle-slider:before {
  transform: translateX(16px);
}

.toggle-label {
  font-size: 0.9em;
  color: var(--text-primary);
  user-select: none;
}

/* Custom checkbox design */
input[type="checkbox"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: 4px solid #e6e6e6;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  cursor: pointer;
  position: relative;
  transition: background-color 0.2s ease;
}

input[type="checkbox"]:checked {
  background-color: var(--primary-color);
}

input[type="checkbox"]:checked::after {
  content: '';
  position: absolute;
  top: 2px;
  left: 7px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.task-text {
  transition: text-decoration 0.2s ease;
}

input[type="checkbox"]:checked + .task-text {
  text-decoration: line-through;
  opacity: 0.7;
}

/* Collapsible arrow animation */
.rotate-0 {
  display: none;
}

.rotate-180 {
  display: none;
}

/* Toast notification */
#toast {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background-color: #374151;
  color: #ffffff;
  padding: 1rem 1.5rem;
  border-radius: 0.5rem;
  opacity: 0;
  transition: opacity 0.5s ease;
  z-index: 1000;
}

/* Priority badges */
.priority-badge {
  padding: 0.25rem 0.75rem !important;
  border-radius: 9999px !important;
  font-size: 0.75rem !important;
  font-weight: 500 !important;
  border: none !important;
  cursor: pointer !important;
  transition: all 0.2s ease !important;
  display: inline-block !important;
}

.priority-high {
  background-color: rgba(239, 68, 68, 0.2) !important;
  color: #ef4444 !important;
}

.priority-medium {
  background-color: rgba(245, 158, 11, 0.2) !important;
  color: #f59e0b !important;
}

.priority-low {
  background-color: rgba(16, 185, 129, 0.2) !important;
  color: #10b981 !important;
}

.priority-badge:hover {
  transform: translateY(-1px) !important;
}

/* Delete Button Styles */
.delete-button {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  border: none;
  background-color: transparent;
  color: #ef4444;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  font-size: 1rem;
  opacity: 0;
  transition: all 0.2s ease;
}

.task-item:hover .delete-button {
  opacity: 1;
}

.delete-button:hover {
  background-color: rgba(239, 68, 68, 0.1);
  transform: scale(1.1);
}

/* Task header title */
.task-title[contenteditable="true"] {
  cursor: text;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  transition: background-color 0.2s ease;
}

.task-title[contenteditable="true"]:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.task-title[contenteditable="true"]:focus {
  background-color: rgba(0, 0, 0, 0.1);
  outline: none;
}

.dark-theme .task-title[contenteditable="true"]:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.dark-theme .task-title[contenteditable="true"]:focus {
  background-color: rgba(255, 255, 255, 0.15);
}

/* Update task-item to accommodate delete button */
.task-item {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  background-color: var(--surface-a0);
  border-radius: 1rem;
  margin-bottom: 0.75rem;
  border: 1px solid rgba(0, 0, 0, 0.05);
  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  transition: all 0.2s ease;
}

.task-item:hover {
  background-color: var(--surface-a10);
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

/* Dark theme adjustments */
.dark-theme .priority-high {
  background-color: rgba(239, 68, 68, 0.2);
}

.dark-theme .priority-medium {
  background-color: rgba(245, 158, 11, 0.2);
}

.dark-theme .priority-low {
  background-color: rgba(16, 185, 129, 0.2);
}

.dark-theme .delete-button:hover {
  background-color: rgba(239, 68, 68, 0.2);
}

/* Drag and Drop CSS */
.task-item.dragging {
  opacity: 0.5;
  background: #f3f4f6;
  border: 2px dashed var(--primary-color);
}

.drop-zone {
  border: 2px dashed var(--primary-color);
  background: rgba(167, 139, 250, 0.1);
}

.drop-target {
  border-top: 2px solid #60a5fa;
}

/* Drag handle styling */
.drag-handle {
  cursor: grab;
}

.drag-handle:active {
  cursor: grabbing;
}

/* Modal styles */
.modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: var(--modal-background);
  backdrop-filter: blur(4px);
}

.modal-content {
  background-color: var(--card-background);
  color: var(--text-primary);
  margin: 5% auto;
  padding: 25px;
  width: 90%;
  max-width: 800px;
  border-radius: 12px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
  max-height: 90vh;
  overflow-y: auto;
  animation: modalFadeIn 0.3s;
}

@keyframes modalFadeIn {
  from {opacity: 0; transform: translateY(-20px);}
  to {opacity: 1; transform: translateY(0);}
}

.close {
  color: var(--text-secondary);
  float: right;
  font-size: 28px;
  font-weight: bold;
  cursor: pointer;
}

.close:hover {
  color: var(--primary-color);
}

/* Responsive styles */
@media (max-width: 768px) {
  .modal-content {
    margin: 0;
    width: 100%;
    height: 100%;
    max-height: 100vh;
    border-radius: 0;
  }
  
  .assignment-item {
    flex-direction: column;
    align-items: stretch;
  }
  
  .add-assignment-button {
    align-self: flex-start;
  }
  
  .assignment-title-row {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .assignment-points {
    margin-left: 0;
  }
}

/* Dark theme specific overrides */
body.dark {
  background: linear-gradient(to bottom right, #ec4899, #8b5cf6);
  color: var(--text-primary);
}

/* Theme toggle styles */
.theme-switch-container {
  display: flex;
  align-items: center;
}

.checkbox-label {
  background-color: #333;
  width: 50px;
  height: 26px;
  border-radius: 50px;
  position: relative;
  padding: 5px;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);
}

.checkbox-label .ball {
  background-color: #fff;
  width: 22px;
  height: 22px;
  position: absolute;
  left: 2px;
  top: 2px;
  border-radius: 50%;
  transition: transform 0.2s linear;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.checkbox:checked + .checkbox-label .ball {
  transform: translateX(24px);
}

/* Focus styles */
button:focus, 
input:focus, 
select:focus {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

[contenteditable="true"]:focus {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

/* Selection styling */
::selection {
  background-color: var(--primary-color);
  color: white;
}

/* Add these additional styles */

/* Logo and badge */
.logo-container {
  display: flex;
  align-items: center;
  position: relative;
}

.title-container {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.title-container h1 {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0;
  color: var(--text-color);
  transition: color 0.3s ease;
}

.creator-credit {
  font-size: 0.875rem;
  color: var(--text-secondary);
  opacity: 0.8;
  font-weight: 400;
  margin-top: -0.25rem;
}

.creator-link {
  color: var(--primary-color);
  text-decoration: none;
  transition: opacity 0.2s ease;
}

.creator-link:hover {
  opacity: 0.8;
}

.dark-theme .creator-link {
  color: var(--primary-color);
}

.badge {
  background-color: var(--primary-color);
  color: white;
  font-size: 0.75rem;
  padding: 0.125rem 0.5rem;
  border-radius: 9999px;
  position: absolute;
  top: -8px;
  left: -15px;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% {
    opacity: 0.7;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.7;
  }
}

/* User avatar */
.user-avatar {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  object-fit: cover;
}

/* Sync status */
.sync-status {
  display: none;
}

.sync-indicator {
  display: none;
}

.sync-indicator i {
  display: none;
}

.sync-indicator span {
  display: none;
}

.sync-time {
  display: none;
}

/* Divider */
.divider {
  height: 1px;
  background-color: #f3f4f6;
  margin: 0.5rem 0;
  border-radius: 1px;
}

/* Completed task styling */
.task-checkbox:checked + .task-text {
  text-decoration: line-through;
  color: #9ca3af;
}

/* Add some hover effects */
.task-item:hover {
  background-color: var(--surface-a10);
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.action-button:hover, .create-header-button:hover, .add-task-button:hover, .load-assignments-button:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .header-controls {
    flex-direction: column;
    align-items: flex-end;
    gap: 0.5rem;
  }
  
  .quick-actions {
    flex-direction: column;
    align-items: stretch;
  }
  
  .action-button {
    justify-content: center;
  }
}

/* Add these styles for drag and drop */
.task-item {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.75rem;
  background-color: var(--card-background);
  border-radius: 0.5rem;
  margin-bottom: 0.5rem;
  cursor: move;
  transition: all 0.2s ease;
}

.task-item.dragging {
  opacity: 0.5;
  background: var(--surface-a10);
  border: 2px dashed var(--primary-color);
}

.drag-handle {
  color: var(--text-secondary);
  cursor: grab;
  user-select: none;
  padding: 0 5px;
  font-size: 1.2em;
}

.drag-handle:active {
  cursor: grabbing;
}

.task-list.drag-over {
  background-color: var(--surface-a10);
  border-radius: 0.5rem;
  padding: 0.5rem;
}

/* Canvas integration styles */
.canvas-auth {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 10px;
  margin: 15px 0;
}

#universitySelect,
#canvasApiUrl,
#canvasApiKey {
  flex: 1;
  min-width: 200px;
  background-color: var(--surface-a0);
  color: var(--text-color);
  padding: 8px 12px;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-size: 14px;
}

#canvasApiUrl[readonly] {
  background-color: var(--surface-a10);
  cursor: not-allowed;
  opacity: 0.8;
}

#fetchAssignmentsBtn {
  align-self: flex-end;
  min-width: 120px;
}

.assignments-list {
  margin-top: 1rem;
  max-height: 60vh;
  overflow-y: auto;
}

.assignment-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  background-color: var(--card-background);
  border-radius: 0.5rem;
  margin-bottom: 0.5rem;
  border-left: 3px solid var(--primary-color);
}

.assignment-details {
  flex: 1;
}

.assignment-title {
  font-weight: 600;
  margin-bottom: 0.25rem;
}

.assignment-due {
  font-size: 0.875rem;
  color: var(--text-secondary);
}

.add-assignment-button {
  background-color: var(--primary-color);
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.add-assignment-button:hover {
  opacity: 0.9;
  transform: translateY(-1px);
}

/* Modal styles */
.modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: var(--modal-background);
  backdrop-filter: blur(4px);
}

.modal-content {
  background-color: var(--card-background);
  margin: 5% auto;
  padding: 2rem;
  border-radius: 1rem;
  max-width: 600px;
  position: relative;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

.close {
  position: absolute;
  right: 1.5rem;
  top: 1rem;
  font-size: 1.5rem;
  cursor: pointer;
  color: var(--text-secondary);
}

.close:hover {
  color: var(--text-primary);
}

/* API help link */
.api-help-link {
  display: inline-block;
  color: var(--primary-color);
  text-decoration: none;
  margin-top: 0.5rem;
  font-size: 0.875rem;
}

.api-help-link:hover {
  text-decoration: underline;
}

/* Instructions list */
.instructions-list {
  margin: 1rem 0;
  padding-left: 1.5rem;
  line-height: 1.6;
}

.instructions-list li {
  margin-bottom: 0.5rem;
}

.instructions-note {
  background-color: var(--surface-a10);
  padding: 1rem;
  border-radius: 0.5rem;
  margin-top: 1rem;
  border-left: 3px solid var(--primary-color);
}

/* Make task text editable */
.task-text {
  flex: 1;
  padding: 0.25rem;
  border-radius: 0.25rem;
  transition: all 0.2s ease;
}

.task-text:focus {
  background-color: var(--surface-a10);
  outline: none;
}

.task-text[contenteditable="true"]:empty:before {
  content: 'Type something...';
  color: var(--text-secondary);
  opacity: 0.7;
}

/* Responsive styles */
@media (max-width: 640px) {
  .canvas-auth {
    flex-direction: column;
  }
  
  .modal-content {
    margin: 0;
    width: 100%;
    height: 100%;
    border-radius: 0;
  }
  
  .assignment-item {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  
  .add-assignment-button {
    width: 100%;
  }
}

/* Add New Task Section */
.add-task-section {
  background-color: var(--card-background);
  border-radius: 12px;
  margin: 1rem;
  padding: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: background-color 0.3s ease;
}

.add-task-section h2 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 1rem;
  color: var(--text-primary);
}

.task-input-container {
  margin-bottom: 1rem;
}

.task-input {
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  background-color: var(--surface-a0);
  color: var(--text-primary);
  transition: all 0.2s ease;
}

.task-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(167, 139, 250, 0.1);
}

.task-options {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.task-date-options {
  display: flex;
  gap: 1rem;
  width: 100%;
}

.notes-input-container {
  width: 100%;
  margin-top: 0.5rem;
}

.task-notes-input {
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 0.875rem;
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  background-color: var(--surface-a0);
  color: var(--text-primary);
  transition: all 0.2s ease;
}

/* Specific styles for the add task section notes */
.add-task-section .task-notes-input {
  height: calc(2 * (0.75rem + 1rem + 2px)); /* Twice the height of task input */
  min-height: unset;
  resize: none;
}

/* Specific styles for the modal view notes */
.modal .task-notes-input {
  min-height: 200px; /* Increased from 150px */
  height: auto;
  resize: vertical;
}

.date-input,
.priority-select,
.header-select {
  flex: 1;
  padding: 0.75rem 1rem;
  font-size: 0.875rem;
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  background-color: var(--surface-a0);
  color: var(--text-primary);
  transition: all 0.2s ease;
}

.date-input:focus,
.priority-select:focus,
.header-select:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(167, 139, 250, 0.1);
}

.add-task-button {
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 0.875rem;
  font-weight: 600;
  color: white;
  background-color: var(--primary-color);
  border: none;
  border-radius: 0.75rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.add-task-button:hover {
  opacity: 0.9;
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

/* Update responsive styles */
@media (min-width: 640px) {
  .task-options {
    flex-direction: column;
  }

  .task-date-options {
    width: 100%;
  }

  .add-task-button {
    width: 100%;
    margin-top: 1rem;
  }
}

/* Remove voice input button styles */
.voice-input-button {
  display: none;
}

/* Task Section Styles */
.task-section {
  position: relative;
  margin: 10px 0;
  transition: transform 0.2s ease;
}

.task-section.dragging-section {
  opacity: 0.7;
  transform: scale(1.02);
  z-index: 1000;
}

.task-section.drag-over-top::before,
.task-section.drag-over-bottom::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  height: 4px;
  background-color: #4a90e2;
  border-radius: 2px;
}

.task-section.drag-over-top::before {
  top: -2px;
}

.task-section.drag-over-bottom::after {
  bottom: -2px;
}

.drag-handle {
  cursor: grab;
  color: #888;
  transition: color 0.2s ease;
}

.drag-handle:hover {
  color: #4a90e2;
}

.task-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 15px;
  background-color: #f5f5f5;
  border-radius: 8px;
  margin-bottom: 10px;
  cursor: pointer;
  user-select: none;
}

.task-header:hover {
  background-color: var(--surface-a20);
}

.task-header-left {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.task-icon {
  color: var(--primary-color);
  font-size: 1.25rem;
}

.task-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-primary);
}

.task-count {
  background-color: var(--primary-color);
  color: white;
  font-size: 0.875rem;
  padding: 0.25rem 0.75rem;
  border-radius: 9999px;
  font-weight: 500;
}

.task-item {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  background-color: var(--surface-a0);
  border-radius: 1rem;
  margin-bottom: 0.75rem;
  border: 1px solid rgba(0, 0, 0, 0.05);
  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  transition: all 0.2s ease;
}

.task-item:hover {
  background-color: var(--surface-a10);
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

/* Canvas Assignments Section */
.canvas-section {
  background-color: var(--card-background);
  border-radius: 12px;
  margin: 1rem;
  padding: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: background-color 0.3s ease;
}

.canvas-section h2 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 1rem;
  color: var(--text-primary);
}

.canvas-filters {
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
  flex-wrap: wrap;
}

.canvas-filter {
  flex: 1;
  min-width: 150px;
  padding: 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  background-color: var(--surface-a0);
  color: var(--text-primary);
  font-size: 0.875rem;
}

.load-assignments-button {
  width: 100%;
  padding: 0.75rem;
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 0.75rem;
  font-weight: 500;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.load-assignments-button:hover {
  opacity: 0.9;
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

/* Productivity Stats Section */
.stats-section {
  background-color: var(--card-background);
  border-radius: 12px;
  margin: 1rem;
  padding: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: background-color 0.3s ease;
}

.stats-section h2 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 1.5rem;
  color: var(--text-primary);
}

.stats-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1.5rem;
}

.stat-item {
  background-color: var(--surface-a0);
  padding: 1.5rem;
  border-radius: 1rem;
  text-align: center;
  border: 1px solid rgba(0, 0, 0, 0.05);
  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.stat-icon {
  font-size: 1.5rem;
  color: var(--primary-color);
  margin-bottom: 0.75rem;
}

.stat-value {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 0.5rem;
  display: block;
}

.stat-label {
  font-size: 0.875rem;
  color: var(--text-secondary);
}

/* Assignment Item Styles */
.assignment-item {
  background-color: var(--surface-a0);
  border-radius: 1rem;
  padding: 1.25rem;
  margin-bottom: 1rem;
  border: 1px solid rgba(0, 0, 0, 0.05);
  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  transition: all 0.2s ease;
}

.assignment-item:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.assignment-title {
  font-size: 1rem;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 0.5rem;
}

.assignment-due {
  font-size: 0.875rem;
  color: var(--text-secondary);
}

/* Modal Input Container */
.modal-input-container {
  margin: 1.5rem 0;
}

.modal-input-container label {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--text-primary);
  margin-bottom: 0.5rem;
}

.modal-input {
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  background-color: var(--surface-a0);
  color: var(--text-primary);
  transition: all 0.2s ease;
}

.modal-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(167, 139, 250, 0.1);
}

.modal-actions {
  display: flex;
  gap: 1rem;
  margin-top: 2rem;
}

.primary-button {
  flex: 1;
  padding: 0.75rem 1rem;
  font-size: 0.875rem;
  font-weight: 600;
  color: white;
  background-color: var(--primary-color);
  border: none;
  border-radius: 0.75rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.secondary-button {
  flex: 1;
  padding: 0.75rem 1rem;
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text-primary);
  background-color: var(--surface-a10);
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.primary-button:hover,
.secondary-button:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

/* Remove user avatar styles */
.user-avatar {
  display: none;
}

/* Update header controls spacing */
.header-controls {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

/* Dark theme adjustments */
.dark-theme .modal-input {
  background-color: var(--surface-a30);
  border-color: var(--border-color);
}

.dark-theme .secondary-button {
  background-color: var(--surface-a20);
  border-color: var(--border-color);
}

/* Delete Header Button Styles */
.delete-header-button {
  opacity: 0;
  transition: opacity 0.2s ease;
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  font-size: 1rem;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
}

.task-header:hover .delete-header-button {
  opacity: 1;
}

.delete-header-button:hover {
  color: var(--error-color);
  background-color: rgba(239, 68, 68, 0.1);
}

/* Streak Progress Bar Styles */
.streak-progress {
  position: relative;
  width: 100%;
  height: 6px;
  margin: 10px 0;
  background-color: var(--surface-a20);
  border-radius: 3px;
  overflow: hidden;
}

.streak-bar {
  position: absolute;
  height: 100%;
  background-color: var(--primary-color);
  width: 0%;
  transition: width 0.5s ease;
  border-radius: 3px;
}

/* Remove old dot styles */
.streak-dots {
  display: none;
}

.dot {
  display: none;
}

/* Update stat-item to accommodate progress bar */
.stat-item {
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.75rem;
}

/* Task Notes Modal Styles */
.task-notes-container {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.task-info {
  padding-bottom: 1rem;
  border-bottom: 1px solid var(--border-color);
}

.task-title-display {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 0.5rem;
}

.task-metadata {
  font-size: 0.875rem;
  color: var(--text-secondary);
}

.notes-input-container {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.notes-input-container label {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--text-primary);
}

.task-notes-input {
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 0.875rem;
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  background-color: var(--surface-a0);
  color: var(--text-primary);
  transition: all 0.2s ease;
}

.task-notes-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(167, 139, 250, 0.1);
}

/* Make task items clickable */
.task-item {
  cursor: pointer;
}

.task-item:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

/* Dark theme adjustments */
.dark-theme .task-notes-input {
  background-color: var(--surface-a30);
  border-color: var(--border-color);
}

.dark-theme .task-info {
  border-color: var(--border-color);
}

/* Context Menu Styles */
.context-menu {
  display: none;
  position: fixed;
  background: var(--surface-card);
  border: 1px solid var(--surface-border);
  border-radius: 4px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  min-width: 180px;
}

.context-menu-item {
  padding: 8px 12px;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 8px;
  color: var(--text-color);
  transition: background-color 0.2s;
}

.context-menu-item:hover {
  background-color: var(--surface-hover);
}

.context-menu-item i {
  width: 16px;
  text-align: center;
  color: var(--primary-color);
}

/* Subtask Styles */
.subtask-container {
  margin-left: 24px;
  border-left: 2px solid var(--surface-border);
  padding-left: 12px;
}

.subtask-item {
  margin-top: 8px;
  opacity: 0.9;
  font-size: 0.95em;
}

.task-item.has-subtasks {
  margin-bottom: 4px;
}

/* Dark theme adjustments */
[data-theme="dark"] .context-menu {
  background: var(--surface-card);
  border-color: var(--surface-border);
}

[data-theme="dark"] .context-menu-item:hover {
  background-color: var(--surface-hover);
}

/* Date Picker Container */
.date-picker-container {
  position: absolute;
  background: var(--surface-card);
  border: 1px solid var(--surface-border);
  border-radius: 4px;
  padding: 8px;
  display: flex;
  gap: 8px;
  z-index: 100;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.date-picker-container .date-input {
  padding: 4px 8px;
  border: 1px solid var(--surface-border);
  border-radius: 4px;
  font-size: 14px;
}

.date-picker-container button {
  padding: 4px 8px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  transition: background-color 0.2s;
}

.date-picker-container .save-date {
  background-color: var(--primary-color);
  color: white;
}

.date-picker-container .save-date:hover {
  background-color: var(--primary-dark);
}

.date-picker-container .cancel-date {
  background-color: var(--surface-hover);
  color: var(--text-color);
}

.date-picker-container .cancel-date:hover {
  background-color: var(--surface-border);
}

[data-theme="dark"] .date-picker-container {
  background: var(--surface-card);
  border-color: var(--surface-border);
}

[data-theme="dark"] .date-picker-container .date-input {
  background: var(--surface-ground);
  color: var(--text-color);
  border-color: var(--surface-border);
}

/* Tutorial Styles */
.tutorial-toggle {
  margin-left: 1rem;
}

.tutorial-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background: var(--primary-color);
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: all 0.2s ease;
  font-weight: 500;
}

.tutorial-button:hover {
  background: var(--primary-color-dark);
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.tutorial-button i {
  font-size: 1.1rem;
}

.tutorial-modal .modal-content {
  max-width: 800px;
  max-height: 80vh;
  overflow-y: auto;
  padding: 30px;
  border-radius: 16px;
}

.tutorial-modal h2 {
  font-size: 1.8rem;
  margin-bottom: 1.5rem;
  color: var(--primary-color);
  font-weight: 700;
}

.tutorial-section {
  margin-bottom: 2rem;
  padding-bottom: 1.5rem;
  border-bottom: 1px solid var(--surface-border);
}

.tutorial-section:last-child {
  border-bottom: none;
  margin-bottom: 0;
  padding-bottom: 0;
}

.tutorial-section h3 {
  color: var(--primary-color);
  margin-bottom: 1.2rem;
  font-size: 1.3rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 8px;
}

.tutorial-section h3::before {
  content: '';
  display: block;
  width: 4px;
  height: 20px;
  background-color: var(--primary-color);
  border-radius: 2px;
}

.tutorial-section ul {
  list-style-type: none;
  padding-left: 8px;
}

.tutorial-section ul ul {
  padding-left: 1.8rem;
  margin-top: 0.8rem;
}

.tutorial-section li {
  margin-bottom: 0.9rem;
  line-height: 1.6;
  position: relative;
  padding-left: 1.5rem;
}

.tutorial-section li::before {
  content: '•';
  position: absolute;
  left: 0;
  color: var(--primary-color);
  font-weight: bold;
}

.tutorial-section strong {
  color: var(--primary-color);
  font-weight: 600;
}

/* Dark theme adjustments */
.dark-theme .tutorial-section strong {
  color: var(--primary-color);
}

.dark-theme .tutorial-section {
  border-color: rgba(255, 255, 255, 0.1);
}

/* Add styles for the notes indicator */
.notes-indicator {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  margin-left: 8px;
  padding: 4px;
  border-radius: 4px;
  cursor: pointer;
  color: var(--text-secondary);
  transition: all 0.2s ease;
}

.notes-indicator:hover {
  color: var(--primary-color);
  background-color: var(--surface-a10);
  transform: translateY(-1px);
}

.dark-theme .notes-indicator:hover {
  background-color: var(--surface-a20);
}

.notes-indicator i {
  font-size: 14px;
}

/* Add theme color selector styles */
.theme-color-container {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-right: 1rem;
  padding: 0.25rem 0.5rem;
  border-radius: 0.5rem;
  background: var(--surface-a5);
}

.color-picker-wrapper {
  position: relative;
  width: 120px;
}

.color-picker {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 100%;
  height: 16px;
  padding: 0;
  border: none;
  border-radius: 8px;
  background: linear-gradient(to right, 
    #ff0000 0%, 
    #ff8000 10%,
    #ffff00 20%, 
    #80ff00 30%, 
    #00ff00 40%, 
    #00ff80 50%, 
    #00ffff 60%, 
    #0080ff 70%, 
    #0000ff 80%, 
    #8000ff 90%, 
    #ff0080 100%
  );
  cursor: pointer;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
}

.color-picker::-webkit-color-swatch-wrapper {
  padding: 0;
}

.color-picker::-webkit-color-swatch {
  border: none;
  border-radius: 8px;
}

.color-picker::-moz-color-swatch {
  border: none;
  border-radius: 8px;
}

.color-preview {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 2px solid var(--surface-a10);
  transition: all 0.3s ease;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
}

/* Remove old theme color button styles */
.theme-color-button,
.theme-color-button:hover,
.theme-color-button.active,
.theme-color-purple,
.theme-color-blue,
.theme-color-green,
.theme-color-pink,
.theme-color-orange {
  display: none;
}

/* Update text colors for dark mode */
.dark-theme .title-container h1,
.dark-theme .task-title,
.dark-theme .task-text,
.dark-theme .task-count,
.dark-theme .creator-credit {
  color: var(--text-color);
}

.dark-theme .sync-time,
.dark-theme .sync-indicator span {
  color: var(--text-secondary);
}

/* Update header background in dark mode */
.dark-theme header {
  background-color: var(--card-background);
}

/* Create header button */
.create-header-button {
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 12px;
  margin: 1rem;
  padding: 1rem;
  width: calc(100% - 2rem);
  font-weight: 600;
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.3s ease;
}

.create-header-button:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  opacity: 0.9;
}

/* Update dark theme variables for better contrast */
.dark-theme {
  --text-color: #f3f4f6;
  --text-secondary: #9ca3af;
  --surface-a5: #2d3748;
  --surface-a10: #374151;
  --surface-a20: #4b5563;
  --card-background: #1f2937;
  --background-color: #111827;
}

/* Update task section styles for dark mode */
.dark-theme .todo-section {
  background-color: #1a2433;
}

.dark-theme .task-header {
  background-color: #1f2937;
}

.dark-theme .task-item {
  background-color: #2d3748;
  border: 1px solid var(--surface-a20);
}

.dark-theme .task-item:hover {
  background-color: #374151;
}

/* Update add task section for dark mode */
.dark-theme .add-task-section {
  background-color: #1a2433;
}

/* Update canvas section for dark mode */
.dark-theme .canvas-section {
  background-color: #1a2433;
}

/* Update stats section for dark mode */
.dark-theme .stats-section {
  background-color: #1a2433;
}

.dark-theme .stat-item {
  background-color: #2d3748;
  border: 1px solid var(--surface-a20);
}

/* Update calendar icon color for dark mode */
.dark-theme .calendar-header button {
  color: var(--text-color);
}

.dark-theme .calendar-header button:hover {
  background: var(--surface-a20);
  color: var(--text-color);
}

/* Update input and select field styles */
.task-input,
.date-input,
.priority-select,
.header-select,
.task-notes-input,
.canvas-filter {
  background-color: var(--surface-a0);
  color: var(--text-color);
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  transition: all 0.2s ease;
}

/* Dark theme adjustments */
.dark-theme .task-input,
.dark-theme .date-input,
.dark-theme .priority-select,
.dark-theme .header-select,
.dark-theme .task-notes-input,
.dark-theme .canvas-filter {
  background-color: #2d3748;
  border-color: var(--surface-a20);
}

.dark-theme .task-input:focus,
.dark-theme .date-input:focus,
.dark-theme .priority-select:focus,
.dark-theme .header-select:focus,
.dark-theme .task-notes-input:focus,
.dark-theme .canvas-filter:focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(167, 139, 250, 0.1);
}

.dark-theme .task-input:hover,
.dark-theme .date-input:hover,
.dark-theme .priority-select:hover,
.dark-theme .header-select:hover,
.dark-theme .task-notes-input:hover,
.dark-theme .canvas-filter:hover {
  background-color: #374151;
}

/* Update placeholder text color */
.dark-theme .task-input::placeholder,
.dark-theme .task-notes-input::placeholder {
  color: var(--text-secondary);
  opacity: 0.7;
}

.dark-theme #universitySelect,
.dark-theme #canvasApiUrl,
.dark-theme #canvasApiKey {
  background-color: var(--surface-a10);
  color: var(--text-color);
  border-color: var(--border-color);
}

.dark-theme #canvasApiUrl[readonly] {
  background-color: var(--surface-a20);
}

/* Collapsible Section Styles */
.section-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 8px;
  transition: background-color 0.2s ease;
}

.section-header:hover {
  background-color: var(--surface-a10);
}

.section-header h2 {
  margin: 0;
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-primary);
}

.toggle-section-btn {
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 50%;
  transition: all 0.2s ease;
}

.toggle-section-btn:hover {
  background-color: var(--surface-a20);
  color: var(--text-primary);
}

.toggle-section-btn i {
  transition: transform 0.2s ease;
}

.section-content {
  max-height: 1000px;
  overflow: hidden;
  transition: max-height 0.3s ease-out;
}

.section-content.collapsed {
  max-height: 0;
}

/* Past Due and Upcoming Labels */
.status-label {
  color: var(--background-color);
  padding: 2px 8px;
  border-radius: 12px;
  font-size: 0.85em;
  white-space: nowrap;
  margin-left: 5px;
}

.status-label.past-due {
  background-color: #e74c3c;
  font-weight: bold;
}

.status-label.upcoming {
  background-color: #2ecc71;
}

/* Add styling for past due assignments */
.assignment-item[data-past-due="true"] {
  border-left: 3px solid #e74c3c;
}

.assignment-item[data-past-due="true"] .due-absolute {
  color: #e74c3c;
  font-weight: bold;
}

.dark-theme .status-label.past-due {
  background-color: #c0392b;
}

.dark-theme .status-label.upcoming {
  background-color: #27ae60;
}

.dark-theme .assignment-item[data-past-due="true"] {
  border-left: 3px solid #c0392b;
}

/* Update existing section styles */
.add-task-section,
.canvas-section,
.stats-section {
  background-color: var(--card-background);
  border-radius: 12px;
  margin: 1rem;
  padding: 0;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: background-color 0.3s ease;
}

.add-task-section .section-content,
.canvas-section .section-content,
.stats-section .section-content {
  padding: 1rem;
}

/* Dark theme adjustments */
.dark-theme .section-header:hover {
  background-color: var(--surface-a20);
}

.dark-theme .toggle-section-btn:hover {
  background-color: var(--surface-a30);
}

/* Assignment type label */
.assignment-type {
  background: var(--primary-color);
  color: var(--background-color);
  padding: 2px 8px;
  border-radius: 12px;
  font-size: 0.75em;
  white-space: nowrap;
  font-weight: 500;
  display: inline-flex;
  align-items: center;
  height: 22px;
}

/* Drag and drop styles */
.task-item {
  position: relative;
}

.task-item.drag-above::before {
  content: '';
  position: absolute;
  top: -2px;
  left: 0;
  right: 0;
  height: 2px;
  background: #4a90e2;
  pointer-events: none;
}

.task-item.drag-below::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  right: 0;
  height: 2px;
  background: #4a90e2;
  pointer-events: none;
}

.task-item.drag-as-subtask::after {
  content: '';
  position: absolute;
  bottom: -4px;
  left: 20px;
  right: 0;
  height: 4px;
  background: #4a90e2;
  border-radius: 2px;
  pointer-events: none;
}

.task-item.dragging {
  opacity: 0.5;
}

.subtask-container {
  margin-left: 20px;
  border-left: 2px solid #e0e0e0;
  padding-left: 10px;
}

.task-item.has-subtasks {
  margin-bottom: 0;
}

.subtask-item {
  margin-left: 20px;
}

.task-section.task-drag-over {
  border: 2px dashed var(--primary-color);
  background-color: rgba(167, 139, 250, 0.05);
  padding: 1rem;
  border-radius: 1.5rem;
  transition: all 0.3s ease;
}

.task-list.drag-over {
  background-color: var(--surface-a10);
  border-radius: 0.5rem;
  padding: 0.5rem;
  transition: all 0.2s ease;
  min-height: 40px;
}

.task-header.header-drag-over {
  background-color: rgba(167, 139, 250, 0.1);
  border: 2px dashed var(--primary-color);
  border-radius: 8px;
  transition: all 0.3s ease;
}

/* Add these additional styles */

/* Update existing select-wrapper styles with additional styling */
.select-wrapper {
  position: relative;
  width: 100%;
  margin-bottom: 15px;
}

.select-wrapper::after {
  content: '\25BC';
  position: absolute;
  top: 50%;
  right: 15px;
  transform: translateY(-50%);
  pointer-events: none;
  color: var(--text-secondary, #6b7280);
  font-size: 0.8rem;
}

/* Move Task Modal specific styles */
#moveTaskModal .modal-content {
  max-width: 450px;
  padding: 0;
}

#moveTaskModal .modal-header {
  padding: 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

#moveTaskModal .modal-header h3 {
  margin: 0;
  font-size: 1.5rem;
  color: var(--text-color);
  font-weight: 600;
}

#moveTaskModal .modal-body {
  padding: 20px;
}

#moveTaskModal .modal-footer {
  padding: 15px 20px;
  display: flex;
  justify-content: flex-end;
  gap: 10px;
}

#moveTaskModal .header-select {
  width: 100%;
  padding: 12px;
  padding-right: 30px;
  border-radius: 8px;
  border: 1px solid var(--border-color);
  background: var(--background-color);
  color: var(--text-color);
  font-size: 1rem;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

#moveTaskModal .header-select:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(167, 139, 250, 0.2);
}

/* Dark theme adjustments */
.dark-theme #moveTaskModal .modal-content {
  background-color: #1f2937;
}

.dark-theme #moveTaskModal .header-select {
  background: var(--surface-a30);
  border-color: var(--surface-a20);
  color: var(--text-color);
}

.dark-theme #moveTaskModal .close-button:hover {
  color: var(--primary-color);
}